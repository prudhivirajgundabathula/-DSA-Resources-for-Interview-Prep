JS Remote jobs -- https://jsremotely.com/

https://devtools.tech/

https://takeuforward.org/

https://practice.learnersbucket.com/problems

https://learnersbucket.com/tutorials/topics/algorithms/

JS Design Patterns https://www.patterns.dev/vanilla/singleton-pattern
https://www.patterns.dev/vanilla/singleton-pattern

https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/

4 GitHub Repositories to Prepare for 4 Different Types of Software Engineering Interviews:

1. 𝐒𝐲𝐬𝐭𝐞𝐦 𝐃𝐞𝐬𝐢𝐠𝐧 𝐈𝐧𝐭𝐞𝐫𝐯𝐢𝐞𝐰𝐬: https://lnkd.in/gEVpTZKH

2. 𝐋𝐨𝐰 𝐋𝐞𝐯𝐞𝐥 𝐃𝐞𝐬𝐢𝐠𝐧 𝐈𝐧𝐭𝐞𝐫𝐯𝐢𝐞𝐰𝐬: https://lnkd.in/gb-r9vha

3. 𝐂𝐨𝐝𝐢𝐧𝐠 𝐈𝐧𝐭𝐞𝐫𝐯𝐢𝐞𝐰𝐬: https://lnkd.in/g4x48ee9

4. 𝐁𝐞𝐡𝐚𝐯𝐢𝐨𝐫𝐚𝐥 𝐈𝐧𝐭𝐞𝐫𝐯𝐢𝐞𝐰𝐬: https://lnkd.in/gJTs2Xsb

https://www.classcentral.com/course/freecodecamp-javascript-algorithms-and-data-struc-34060

https://github.com/amigoscode/javascript-mastery

https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/constructor

https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/

https://eloquentjavascript.net/

https://github.com/amigoscode/javascript-mastery

LeetCode::  https://leetcode.com/studyplan/

https://github.com/ashishps1/awesome-leetcode-resources?tab=readme-ov-file


https://www.codingninjas.com/studio/problems


DSA https://www.techinterviewhandbook.org/algorithms/study-cheatsheet/
https://takeuforward.org/  https://takeuforward.org/strivers-a2z-dsa-course/strivers-a2z-dsa-course-sheet-2/
github Algorithm cheatsheet https://github.com/rgbedin/interview-prep/blob/main/algo-sheet.md
https://www.greatfrontend.com/questions
 Software Engineer interviews: Everything you need to prepare     https://www.techinterviewhandbook.org/software-engineering-interview-guide/https://medium.com/@ricbedin/how-i-landed-4-staff-l6-software-engineering-offers-amazon-meta-stripe-and-braze-cfeed8d3e5a9
Master the Coding Interview: Data Structures + Algorithmshttps://www.udemy.com/course/master-the-coding-interview-data-structures-algorithms/?couponCode=NVDPRODIN35

Grind 75: It is important to optimize your time by selecting the most relevant LeetCode questions to spend your time on. This is exactly what this tool provides: you share how much time you have on hand and it will craft a roadmap of questions https://www.techinterviewhandbook.org/grind75
20 Leetcode Problems to Learn 20 Dynamic Programming Patterns:

1. Fibonacci Numbers: https://lnkd.in/g7pbDHnX

2. Kadane's Algorithm: https://lnkd.in/gjwfUv-9

3. 0/1 Knapsack: https://lnkd.in/gc8Geen2

4. Unbounded Knapsack: https://lnkd.in/g-FYrJrt

5. DP on strings: https://lnkd.in/gUC2nGv9

6. DP for substrings: https://lnkd.in/gJMzudmY

7. DP on subsequences: https://lnkd.in/g_H23Bsu

8. Longest Increasing Subsequence: https://lnkd.in/gNtrAFQz

9. Longest Palindromic Subsequence: https://lnkd.in/g6JdG6tF

10. Count Distinct Ways: https://lnkd.in/gX6QUtUJ

11. Catalan numbers: https://lnkd.in/g7FwRtMX

12. DP on Trees: https://lnkd.in/gRhNxTh5

13. DP on a Grid: https://lnkd.in/gMn6HFAA

14. Minimum (Maximum) Path to Reach a Target: https://lnkd.in/gTqHJT4s

15. Prefix Sum: https://lnkd.in/g9HHQ2Z8

16. Game Theory DP: https://lnkd.in/gWpxnNqt

17. Probability DP: https://lnkd.in/gr_aR3eq

18. Matrix Chain Multiplication: https://lnkd.in/gn6ipyMT

19. Digit DP: https://lnkd.in/gG3_hKT7

20. State Compression DP: https://lnkd.in/gVFybsks
